import pyforest
from sklearn.datasets import fetch_openml
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.pipeline import make_pipeline

def linear_regression_boston():
    df = fetch_openml("boston", version=1, as_frame=True).frame
    X, y = df[["RM"]], df["MEDV"]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
    model = LinearRegression().fit(X_train, y_train)
    y_pred = model.predict(X_test)
    plt.scatter(X_test, y_test); plt.plot(X_test, y_pred, color='red'); plt.title("Boston Housing"); plt.show()
    print("Boston | MSE:", mean_squared_error(y_test, y_pred), "| R²:", r2_score(y_test, y_pred))

def polynomial_regression_auto_mpg():
    df = sns.load_dataset("mpg").dropna()
    X, y = df[["displacement"]], df["mpg"]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
    model = make_pipeline(PolynomialFeatures(2), StandardScaler(), LinearRegression()).fit(X_train, y_train)
    y_pred = model.predict(X_test)
    plt.scatter(X_test, y_test); plt.scatter(X_test, y_pred, color='red'); plt.title("Auto MPG"); plt.show()
    print("Auto MPG | MSE:", mean_squared_error(y_test, y_pred), "| R²:", r2_score(y_test, y_pred))

linear_regression_boston()
polynomial_regression_auto_mpg()
